[{"content":"As a blog author, especially those related to computing, sometimes we need a media that can support the content. There are many ways to support content, including screenshots and video recording. but if we are faced with commandline interactive, it doesn\u0026rsquo;t feel right if we use screenshots or video recording as a means of documentation.\nit\u0026rsquo;s time for us to get acquainted Asciinema, with this tool let\u0026rsquo;s forget about recording and video applications that look terrible due to blur The main features offered by Asciinema include:\nsimple recording, run with asciinema rec command and finish with ctrl-d. copy \u0026amp; paste, every time you want to try the command from the recording, just drag the cursor on the text and copy it. well.. everything is just text not a bunch of pixels. - embedding, well of course this feature is expected, and will be our discussion today. Get Started Initially I followed the guide from tonylyke, but there was a problem when following the guide. Asciinema that I embed always doesn\u0026rsquo;t generate or doesn\u0026rsquo;t appear, I tried to debug, but there are no error indicators. and in the end I surrender. I looked for another alternative, and finally found it.\ngohugo-asciinema, a hugo module that offers simple and easy asciinema embedding function\nInstallation the hugo module is powered by go modules. and we need go compiler to run it. in voidlinux you can run the command to install it.\nsudo xbps-install -S go ok, time to install\nrun the following command, to make our blog repo a module place. hugo mod init gitlab.com/novores/blog-repo next, we fulfill the dependency of gohugo-asciinema with the command. hugo mod get -u -v cj.rs/gohugo-asciinema then edit your config,config.yaml/config.toml by adding the module reference. yaml module: replacements: \u0026#34;cj.rs/gohugo-asciinema-\u0026gt;gohugo-asciinema\u0026#34; imports: - path: cj.rs/gohugo-asciinema toml [module] [[module.imports]] path = \u0026#34;cj.rs/gohugo-asciinema\u0026#34; Usage use the following shortcode into the page you want to embed asciinema.\nexample:\n{{\u0026lt; asciicast src=\u0026#34;free.cast\u0026#34; poster=\u0026#34;npt:0:04\u0026#34; autoPlay=true loop=true rows=\u0026#34;10\u0026#34; cols=\u0026#34;80\u0026#34; \u0026gt;}} NOTE\nmake sure the files are placed in the same folder as index.md, this is an example of my system file tree\ncontent/blog/linuxupskillchallenge-day1/ ├── cover.png ├── df.cast ├── free.cast ├── index.id.md ├── ls.cast ├── ssh.cast ├── uname.cast └── uptime.cast in addition to the above parameters we can also use other parameters see asciinema-player options\nand the result will be like this.\nTo run this asciicast without javascript, use asciinema play https://novores.xyz/free.cast with Asciinema\nthanks for reading 👋\nReference https://asciinema.org/ https://github.com/asciinema/asciinema-player#api https://github.com/cljoly/gohugo-asciinema ","permalink":"https://novores.xyz/en/blog/cara_mudah_embed_asciinema_ke_dalam_hugo/","summary":"As a blog author, especially those related to computing, sometimes we need a media that can support the content. There are many ways to support content, including screenshots and video recording. but if we are faced with commandline interactive, it doesn\u0026rsquo;t feel right if we use screenshots or video recording as a means of documentation.\nit\u0026rsquo;s time for us to get acquainted Asciinema, with this tool let\u0026rsquo;s forget about recording and video applications that look terrible due to blur The main features offered by Asciinema include:","title":"Easy Way To Embed Asciinema Into Hugo"},{"content":" This blog is part of the linux upskill challenge series. contains notes of my learning process in following the linux upskill challenge guide\nthe other day you have successfully created a server. You yourself will manage the server, of course. to become a linux server admin, we are required to be comfortable working with various linux variants. but for now ubuntu is the best choice.\nToday\u0026rsquo;s Task connect and log in remotely to the server run some simple commands, to check server status Connect Server yesterday we tried to connect to the server using ssh using a private key. in yesterday\u0026rsquo;s discussion on day 0 I used the configuration file to connect now I will try to connect without a config file or manually.\npreviously we have created a key pair using ssh keygen into the .ssh directory with the name ed25519 the following command will give us access to alibaba cloud ecs (elastic compute service) server.\nssh -i path/to/key_file \u0026lt;username\u0026gt;@\u0026lt;remote_host\u0026gt; flag -i atau kepanjangan dari --identity_file tempat kita menginput jalur ke file private key kita.\nwhy do we use the config file instead of the way above? so that it doesn\u0026rsquo;t waste time and of course it\u0026rsquo;s easier to manage everything hosts (if we have many) into the file.\nin our windows version 10 and below we can use putty a gui-based application which is of course user friendly to access ssh. and for versions above you can use windows subsystem linux which supports most linux command line environments.\nlet\u0026rsquo;s enter the server, watch the video below\nTo run this asciicast without javascript, use asciinema play https://novores.xyz/ssh.cast with Asciinema\nI use the ssh command with the hostname ecs based on the contents of the configuration. seen when we enter the server, the username is ech-user with the hostname sarvis\nRun Basic Commands ls Used to view a list of files and directories. see manpage man ls To run this asciicast without javascript, use asciinema play https://novores.xyz/ls.cast with Asciinema\nIf the ls command returns nothing, it means you don\u0026rsquo;t have any directories or files. to prepare the contents of the home directory you need to install xdg-user-dirs and run the command xdg-user-dirs-update. later you will have a default unix directory such as desktop, images, documents and so on.\nuptime tells you how long the machine/server has been running and other information. see man uptime To run this asciicast without javascript, use asciinema play https://novores.xyz/uptime.cast with Asciinema\nfree displays the amount of free and used memory in the system. see man free To run this asciicast without javascript, use asciinema play https://novores.xyz/free.cast with Asciinema\ndf gives a big picture of the used file system disk space To run this asciicast without javascript, use asciinema play https://novores.xyz/df.cast with Asciinema\nuname displays information about the server and its operating system To run this asciicast without javascript, use asciinema play https://novores.xyz/uname.cast with Asciinema\nthe above command is sufficient to know the big picture of system information.\nwait.. then how to log out?\ncalm down we just need to press ctrl + d or by typing exit\nWrap You are now able to login remotely to your server. maybe you are also interested in opening it on your smartphone, with termux for example. however most sysadmins prefer to access it via the production system.\nOh.. Here you are, thanks for reading.\n","permalink":"https://novores.xyz/en/blog/linuxupskillchallenge-day1/","summary":"This blog is part of the linux upskill challenge series. contains notes of my learning process in following the linux upskill challenge guide\nthe other day you have successfully created a server. You yourself will manage the server, of course. to become a linux server admin, we are required to be comfortable working with various linux variants. but for now ubuntu is the best choice.\nToday\u0026rsquo;s Task connect and log in remotely to the server run some simple commands, to check server status Connect Server yesterday we tried to connect to the server using ssh using a private key.","title":"Linux Upskill Challenge: Day 1"},{"content":"Intro I have been struggling with linux for 3 years since 2019 until now, from learning the gui to the cli, from running desktop manager to window manager, from ubuntu to archlinux (well although I know archlinux isn\u0026rsquo;t really that difficult), my long journey to bash scripting. all the trips were really fun and unknowingly became my interest in the world of work, even though my education background is not related to that.\ntoday I want to improve my skills in the linux world, well.. you must know to be sysadmin an acronym for system adminstrator, For those who don\u0026rsquo;t know, a sysadmin in short is someone who is responsible for managing the system, maintaining and also operating the server system.\nin searching for sources of my learning process which incidentally is a self-taught, I found a github repo that provides learning to start becoming a sysadmin, namely linux upskill challenge which contains 20 learning titles that were previously paid online server admin linux courses - now free to learn. let\u0026rsquo;s get started!\nDay 0 : Creating Your Own Server first we enter day 0, to become a server admin of course we must have or be able to access the server itself, out there are many providers free servers for 1 month to 12 months, including aws, google cloud, alibaba cloud, azure, oracle, ibm, and many more. here I will use alibaba cloud as my playground in entering the world of sysadmins.\nwhy i prefer alibaba cloud over others? because alibaba provides alibaba educate which is intended for students to learn server or alibaba cloud itself, the benefits obtained when using alibaba educate are. (this is not an endorsement)\nYou can freely access the provided cloud server, for 1 year, with the following vm specifications. One core CPU Linux OS 1 Gb RAM (Random Access Memory) 40 Gb Ultradisk 1 Mbps Bandwith which is enough for learning. (not recommended for production use) Free training and certificate for one year no need for credit card or debit card lucky students from Indonesia, alibaba provides alibaba educate for region Indonesia which after registering is valid for one year starting from that, therefore I prefer alibaba over others.\nRegister Alibaba Cloud Requirements the alibaba cloud registration process is relatively easy we only need an e-mail and password, and because it\u0026rsquo;s for students, which one not old enough to have a credit/debit card, so we don\u0026rsquo;t need a credit card or debit card instead we need documents verification related to our school institution. For example, student cards, student ID cards or it could be a credit sheet.\nCreate New Account click the following link to register to alibaba cloud register alibabacloud Click Sign Up Now under the sign form select individual account then next enter your email and create a password click sign up (step 1 of 2) Enter the OTP code sent via e-mail or mobile number Enter your additional information, pay attention to the form marked *, it means that this field is mandatory. when finished you will be directed to the alibaba cloud dashboard page. go to menu and search for elastic compute service (ecs) click create instance after it looks like the picture below, do not change anything except certain fields that must be filled. ok now you have a server. create ssh key Well, now that you have an active server for a year, it\u0026rsquo;s time to dive into the server. we will create ssh key pair\nopen your terminal, enter the command:\nssh-keygen -t ed25519 -a 100 -t option to select key type -a option key derivation function (increases immunity against brute-force cracking when keys are stolen)\nthe resulting output will be like this\n$ ssh-keygen -t ed25519 -a 100 Generating public/private ed25519 key pair. Enter file in which to save the key (/home/novores/.ssh/id_ed25519): enter the desired key location path (by filling absolute path). press enter will directly save the key in the directory /home/novores/.ssh/id ed25519\nmake sure the key was generated successfully by checking into the location where the key was stored. because we generate key to connect between remote machine with local machine then in the directory where the keys are stored, you will see 2 pairs of key names, one with a .pub ending and one without. Now, the ending is .pub. This is what you will use later on into the remote machine, by copying the contents of the file into the ecs console.\nEnter The Public Key (.pub) Into The ECS Console go to ecs console in the left sidebar scroll down find ssh key pairs and click make sure in the top tab select the server region that has been set previously, or can be seen on the dashboard, in my case malaysia (kuala lumpur). click create ssh key pair enter the name, in the creation type column select import, then copy the public key that has been created into the box provided tekan ok Make Config create config directory\ncd .ssh vim config then add and edit the configuration below into the config file\n# Enter the alias of the ECS instance to connect to the instance by using an SSH key pair. Host ecs # Enter the public IP address of the instance. HostName 121.196.**.** # Enter the port number. The default port number is 22. Port 22 # Enter the logon account. User root # Enter the address of the private key file on your PC. IdentityFile ~/.ssh/id_ed25519 Login to Server with the config above it will make it easier for us to enter the server, we only need to type the ssh command along with the alias (the configuration above the alias is ecs)\nssh ecs voila!! it\u0026rsquo;s time to be a sysadmin\nin the next day I will try to dive into the server with basic commands.\n","permalink":"https://novores.xyz/en/blog/linuxupskillchallenge-day0/","summary":"Intro I have been struggling with linux for 3 years since 2019 until now, from learning the gui to the cli, from running desktop manager to window manager, from ubuntu to archlinux (well although I know archlinux isn\u0026rsquo;t really that difficult), my long journey to bash scripting. all the trips were really fun and unknowingly became my interest in the world of work, even though my education background is not related to that.","title":"Linux Upskill Challenge: Day 0"},{"content":"Introduction hugo is a feature-rich static site generator. one of them is the comment feature, to add this comment feature we only need to add a shortcode to the frontmatter of our blog. but unfortunately this feature is only available for disqus. I personally don\u0026rsquo;t really like disquss because of its proprietary.\nif we want to add comments from other providers, then we have to write the shortcode itself.\nI prefer cactus comment where comments that enter the blog/website will be directly linked through the matrix account.\nCondition make sure you have a matrix account. if you don\u0026rsquo;t have it, please register here. the link leads to the element, one of the client matrix. The ui/ux element is very easy to understand making it suitable for new users of matrix.\nRegister Your Site If you have registered and logged in, the first thing to do is register your site with cactus comment. create [new chat with @cactusbot: cactus.chat] (https://matrix.to/#/@cactusbot:cactus.chat)\nthen type.\nregister \u0026lt;your site name\u0026gt; the site name does not have to be the same as the domain name, create a unique site name\nif it is finished we move on to the next stage.\nIntegration Stage Now we enter the stage of integration of cactus comment with hugo.\nCreate A Shortcode to create a shortcode in hugo, we just need to copy the following code into the layout/shortcodes/ folder. in my case the folder is in the theme/\u0026lt;theme-name\u0026gt; folder.\n\u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;https://latest.cactus.chat/cactus.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://latest.cactus.chat/style.css\u0026#34; type=\u0026#34;text/css\u0026#34;\u0026gt; \u0026lt;div id=\u0026#34;comment-section\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; initComments({ node: document.getElementById(\u0026#34;comment-section\u0026#34;), defaultHomeserverUrl: \u0026#34;https://matrix.cactus.chat:8448\u0026#34;, serverName: \u0026#34;cactus.chat\u0026#34;, siteName: \u0026#34;\u0026lt;YOUR-SITE-NAME\u0026gt;\u0026#34;, commentSectionId: \u0026#34;{{ index .Params 0 }}\u0026#34; }) \u0026lt;/script\u0026gt; Don\u0026rsquo;t forget to include your site name in the site name column above. the line of code above is very customizable, see the guide here\nAdd Comment to add a comment to a post we just need to add the following line\n{{\u0026lt; chat room-chat \u0026gt;}} at the end of each post we have made.\nfunction room-chat, as the name of your chat room in the matrix. You can make the choice whether to separate the chat rooms for each post (eg changing the room name to the title of your post) or the same room for each post (each post is given the same room name)\nTesting to comment on cactus comment, you get 2 options. first comment as anonymous account(without login) and second use matrix account(with login)\nthe following display if the cactus comment is successfully entered. if you want to login before commenting then click the log in button, then a window will appear as below, just enter Your matrix account username is usually in the format @username:matrix.org and don\u0026rsquo;t forget the password. comments entered will be entered into the chat room in the client matrix, the name of the room depends on the name of the comment that has been entered previously. in my case I use keyword from the post title. in the picture above I use the name ignore-pacman, where the name is taken from my post title keyword. pay attention to the word hello world in the chat.\nthat\u0026rsquo;s all you need to do to add cactus-comments to hugo\u0026rsquo;s blog.\nthank you for reading..\nReference https://cactus.chat/docs/getting-started/quick-start/ https://cactus.chat/docs/integrations/hugo/ ","permalink":"https://novores.xyz/en/blog/cactus-comment/","summary":"Introduction hugo is a feature-rich static site generator. one of them is the comment feature, to add this comment feature we only need to add a shortcode to the frontmatter of our blog. but unfortunately this feature is only available for disqus. I personally don\u0026rsquo;t really like disquss because of its proprietary.\nif we want to add comments from other providers, then we have to write the shortcode itself.\nI prefer cactus comment where comments that enter the blog/website will be directly linked through the matrix account.","title":"Added Cactus Comments to Hugo"},{"content":"Description wormhole-william is the go language implementation of magic-wormhole.\nWormhole itself is a command-line tool that contains commands to send and receive files, directories, and text, securely. this is to send and receive files using easy-to-read wormhole code as the “unlocking key” example of the unlocking key in question:5-boy-farming.\nThe wormhole also provides end-to-end encryption, the endpoint is connected to the same 2 endpoints.\nwhy use wormhole-william instead of wormhole?\nbecause wormhole-william has several additional features that are not present in the basic wormhole, such as qr code support, built-in script for auto-completion in several shell types, various flag options, and qr code support for mobile phones. ..\nInstallation AUR sudo pacman -S wormhole-william Go tool (requires go to be installed) go install github.com/psanford/wormhole-william@latest Usage to make typing easier, create an alias for wormhole-william to be wormhole.\nsee the manpage to see how to use it in full.\nsend files\n$ wormhole send \u0026lt;path to file\u0026gt; send file with qr code $ wormhole send \u0026lt;path to file\u0026gt; --qr The qr code makes it easy to enter the wormhole code on the cellphone. and this includes features that are not present in ordinary wormholes.\nreceive files\n$ wormhole receive \u0026lt;wormhole code from sender\u0026gt; send text\n$ wormhole send Text to send: \u0026lt;string\u0026gt; atau\n$ wormhole send --text \u0026lt;string\u0026gt; send text with qr code $ wormhole send --text \u0026lt;string\u0026gt; --qr besides sending files and text the wormhole can also send a directory/folder. the same way with the command to send files. later the sent folder will be automatically compressed by the wormhole with the format zip\nSend And Receive Files on Android you can also send files to and from android by using wormhole-william. wormhole-william view on android\nyou can download this application at Play Store or you can install directly on github . one of the interesting features in this application is we can scan the qr code generated from the wormhole, here.\n","permalink":"https://novores.xyz/en/blog/wormhole/","summary":"Description wormhole-william is the go language implementation of magic-wormhole.\nWormhole itself is a command-line tool that contains commands to send and receive files, directories, and text, securely. this is to send and receive files using easy-to-read wormhole code as the “unlocking key” example of the unlocking key in question:5-boy-farming.\nThe wormhole also provides end-to-end encryption, the endpoint is connected to the same 2 endpoints.\nwhy use wormhole-william instead of wormhole?","title":"Share Files Between Devices with Wormhole William"},{"content":"Intro bluetooth is one of the technologies that must exist in every computer device, because of its many, many uses, not only for file transfers, but bluetooth can also be used to connect sound wirelessly.\naccording to wikipedia\nBluetooth is the industry specification for wireless personal area networks (PAN). bluetooth connects and can be used to exchange information between devices. The specifications of this bluetooth device are developed and distributed by the bluetooth special interest group.\nbecause of its relatively large scale of use, bluetooth is used quite often.\nin this article I will give a tutorial on how to activate bluetooth simply, just use a terminal shell.\nRequirements bluez-utils bluez\nStep-by-step install bluez and bluez-utils, both are basic packages to enable bluetooth on linux. After installing both, continue to enable the bluetooth service to run on the daemon. if you are using systemd type the following command: systemctl start bluetoothd whereas if you use openrc then the following command: sudo rc-service bluetoothd start now we will use the bluetoothctl command line buka controller bluetooth bluetooth bluetoothctl to activate the bluetooth controller type [bluetooth]# power on scan the * device * to be connected [bluetooth]# scan on after being scanned, a number will appear which leads to the device in question connect bluetooth on the device in question, for example, my device is 22:22:0a:53:72:c9 [bluetooth]# connect 22:22:0A:53:72:C9 if you are not sure which device you want to connect, check the registered/scanned devices by typing devices, a device name with number will appear. pair beetween 2 device voila..! bluetooth is connected Outro activate connect bluetooth by typing commands, very fun isn\u0026rsquo;t it? yeah i see. I\u0026rsquo;m sure you feel you\u0026rsquo;re hacking, or muttering in your heart I\u0026rsquo;m a hacker. but frankly, this method is very cool to do, in front of my friends, hehe..\n","permalink":"https://novores.xyz/en/blog/bluetoothctl/","summary":"Intro bluetooth is one of the technologies that must exist in every computer device, because of its many, many uses, not only for file transfers, but bluetooth can also be used to connect sound wirelessly.\naccording to wikipedia\nBluetooth is the industry specification for wireless personal area networks (PAN). bluetooth connects and can be used to exchange information between devices. The specifications of this bluetooth device are developed and distributed by the bluetooth special interest group.","title":"How to Activate Bluetooth With Just A Terminal on Linux"},{"content":"Background sometimes when we want to update a package, there are things we want to ignore to update. for example, if there is a lack of quota I will make one large package to be ignored, one of which is libreoffice, this package one of the big packages and not too important to upgrade in my opinion, that I have\nAttention be careful when choosing packages to ignore for upgrading make sure there are no dependencies to depend on Mainly the Linux kernel\nSolution quoted from page archwiki quoted from page archwiki there are 2 ways for archlinux users to ignore packages to be upgraded.\nfirst step the first way to ignore the package to be upgraded is to edit the file /etc/pacman.conf uncomment the line ignore pkg then enter the name of the package to be ignored or ignore. for example, I enter firefox and libreoffice:\n#IgnorePkg = firefox libreoffice-still we can also ignore the package group here by uncommenting the line\n#IgnoreGroup=gnome the second way The second way to ignore the package to be upgraded is to add the string --ignore=firefox when upgrading the example package:\nsudo pacman -Syu --ignore=firefox whereas, for the package group, here\u0026rsquo;s an example:\nsudo pacman -Syu --ignoregroup=gnome Reference Archwiki ","permalink":"https://novores.xyz/en/blog/mengabaikan-package-archlinux/","summary":"Background sometimes when we want to update a package, there are things we want to ignore to update. for example, if there is a lack of quota I will make one large package to be ignored, one of which is libreoffice, this package one of the big packages and not too important to upgrade in my opinion, that I have\nAttention be careful when choosing packages to ignore for upgrading make sure there are no dependencies to depend on Mainly the Linux kernel","title":"How to Ignore Certain Packages To Upgrade in Archlinux"},{"content":"description emptty itself is cli based, this is what makes it quite simple to operate, emptty is a simple display manager, emptty is written in the go language. but there are some configurations that we must determine first, so that emptty can work as we want.\nInstalling unfortunately emptty is only available in the aur and void repos. but calm down you can install emptty via cloning.\ntype the following command\n$ git clone https://github.com/tvrzna/emptty.git $ cd emptty $ sudo make Makefile Configuring then type the following command to find out that emptty is installed correctly\n$ emptty -v now we will edit the emptty config file in /etc/emptty/conf.\n$ sudo nano /etc/emptty/conf ini adalah contoh file config saya.\n# TTY, where emptty will start. TTY_NUMBER=2 # Enables switching to defined TTY number. SWITCH_TTY=true # Enables printing of /etc/issue in daemon mode. PRINT_ISSUE=true # TTY, where emptty will start. TTY_NUMBER=2 # Enables switching to defined TTY number. SWITCH_TTY=true # Enables printing of /etc/issue in daemon mode. PRINT_ISSUE=true # Preselected user, if AUTOLOGIN is enabled, this user is logged in. DEFAULT_USER=noval # Enables Autologin, if DEFAULT_USER is defined and part of nopasswdlogin group. Possible values are \u0026#34;true\u0026#34; or \u0026#34;false\u0026#34;. AUTOLOGIN=false # The default session used, if Autologin is enabled. If session is not found in list of session, it proceeds to manual selection. AUTOLOGIN_SESSION=bspwm # Default LANG, if user does not have set own in init script. #LANG=en_US.UTF-8 # Starts desktop with calling \u0026#34;dbus-launch\u0026#34;. DBUS_LAUNCH=true # Starts Xorg desktop with calling \u0026#34;~/.xinitrc\u0026#34; script, if is true, file exists and selected WM/DE is Xorg session, it overrides DBUS_LAUNCH. XINITRC_LAUNCH=false # Prints available WM/DE each on new line instead of printing on single line. VERTICAL_SELECTION=false and lastly, to enable emptty on boot, type the following command in the shell.\nsystemctl enable emptty.service the above command is only intended for systemd users\nemptty has provided various init scripts in its source folder and all of them will be installed automatically when you install emptty via script makefile. you just need to type the following command to activate emptty.\nsudo rc-update add emptty Reboot\nClosing The best software documentation must come from the software developer.\n","permalink":"https://novores.xyz/en/blog/cara-mudah-mengkonfigurasi-emptty/","summary":"description emptty itself is cli based, this is what makes it quite simple to operate, emptty is a simple display manager, emptty is written in the go language. but there are some configurations that we must determine first, so that emptty can work as we want.\nInstalling unfortunately emptty is only available in the aur and void repos. but calm down you can install emptty via cloning.\ntype the following command","title":"Emptty: A Very Simple Display Manager"}]