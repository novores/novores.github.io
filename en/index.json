[{"content":"Introduction hugo is a feature-rich static site generator. one of them is the comment feature, to add this comment feature we only need to add a shortcode to the frontmatter of our blog. but unfortunately this feature is only available for disqus. I personally don\u0026rsquo;t really like disquss because of its proprietary.\nif we want to add comments from other providers, then we have to write the shortcode itself.\nI prefer cactus comment where comments that enter the blog/website will be directly linked through the matrix account.\n Condition make sure you have a matrix account. if you don\u0026rsquo;t have it, please register here. the link leads to the element, one of the client matrix. The ui/ux element is very easy to understand making it suitable for new users of matrix.\nRegister Your Site If you have registered and logged in, the first thing to do is register your site with cactus comment. create [new chat with @cactusbot: cactus.chat] (https://matrix.to/#/@cactusbot:cactus.chat)\nthen type.\nregister \u0026lt;your site name\u0026gt; the site name does not have to be the same as the domain name, create a unique site name\nif it is finished we move on to the next stage.\n Integration Stage Now we enter the stage of integration of cactus comment with hugo.\nCreate A Shortcode to create a shortcode in hugo, we just need to copy the following code into the layout/shortcodes/ folder. in my case the folder is in the theme/\u0026lt;theme-name\u0026gt; folder.\n\u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;https://latest.cactus.chat/cactus.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://latest.cactus.chat/style.css\u0026#34; type=\u0026#34;text/css\u0026#34;\u0026gt; \u0026lt;div id=\u0026#34;comment-section\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; initComments({  node: document.getElementById(\u0026#34;comment-section\u0026#34;),  defaultHomeserverUrl: \u0026#34;https://matrix.cactus.chat:8448\u0026#34;,  serverName: \u0026#34;cactus.chat\u0026#34;,  siteName: \u0026#34;\u0026lt;YOUR-SITE-NAME\u0026gt;\u0026#34;,  commentSectionId: \u0026#34;{{ index .Params 0 }}\u0026#34; }) \u0026lt;/script\u0026gt; Don\u0026rsquo;t forget to include your site name in the site name column above. the line of code above is very customizable, see the guide here\nAdd Comment to add a comment to a post we just need to add the following line\n{{\u0026lt; chat room-chat \u0026gt;}} at the end of each post we have made.\nfunction room-chat, as the name of your chat room in the matrix. You can make the choice whether to separate the chat rooms for each post (eg changing the room name to the title of your post) or the same room for each post (each post is given the same room name)\n Testing to comment on cactus comment, you get 2 options. first comment as anonymous account(without login) and second use matrix account(with login)\nthe following display if the cactus comment is successfully entered. if you want to login before commenting then click the log in button, then a window will appear as below, just enter Your matrix account username is usually in the format @username:matrix.org and don\u0026rsquo;t forget the password. comments entered will be entered into the chat room in the client matrix, the name of the room depends on the name of the comment that has been entered previously. in my case I use keyword from the post title. in the picture above I use the name ignore-pacman, where the name is taken from my post title keyword. pay attention to the word hello world in the chat.\nthat\u0026rsquo;s all you need to do to add cactus-comments to hugo\u0026rsquo;s blog.\nthank you for reading..\n Reference  https://cactus.chat/docs/getting-started/quick-start/ https://cactus.chat/docs/integrations/hugo/      initComments({ node: document.getElementById(\"comment-section\"), defaultHomeserverUrl: \"https://matrix.cactus.chat:8448\", serverName: \"cactus.chat\", siteName: \"novores.xyz\", commentSectionId: \"cactus-comments\" })  ","permalink":"https://novores.xyz/en/blog/cactus-comment/","summary":"Introduction hugo is a feature-rich static site generator. one of them is the comment feature, to add this comment feature we only need to add a shortcode to the frontmatter of our blog. but unfortunately this feature is only available for disqus. I personally don\u0026rsquo;t really like disquss because of its proprietary.\nif we want to add comments from other providers, then we have to write the shortcode itself.\nI prefer cactus comment where comments that enter the blog/website will be directly linked through the matrix account.","title":"Added Cactus Comments to Hugo"},{"content":"Description wormhole-william is the go language implementation of magic-wormhole.\nWormhole itself is a command-line tool that contains commands to send and receive files, directories, and text, securely. this is to send and receive files using easy-to-read wormhole code as the “unlocking key” example of the unlocking key in question:5-boy-farming.\nThe wormhole also provides end-to-end encryption, the endpoint is connected to the same 2 endpoints.\n why use wormhole-william instead of wormhole?\n because wormhole-william has several additional features that are not present in the basic wormhole, such as qr code support, built-in script for auto-completion in several shell types, various flag options, and qr code support for mobile phones. ..\n Installation  AUR sudo pacman -S wormhole-william Go tool (requires go to be installed) go install github.com/psanford/wormhole-william@latest   Usage  to make typing easier, create an alias for wormhole-william to be wormhole.\n  see the manpage to see how to use it in full.\n   send files\n$ wormhole send \u0026lt;path to file\u0026gt;  send file with qr code $ wormhole send \u0026lt;path to file\u0026gt; --qr  The qr code makes it easy to enter the wormhole code on the cellphone. and this includes features that are not present in ordinary wormholes.\n     receive files\n$ wormhole receive \u0026lt;wormhole code from sender\u0026gt;   send text\n$ wormhole send  Text to send: \u0026lt;string\u0026gt; atau\n$ wormhole send --text \u0026lt;string\u0026gt;  send text with qr code $ wormhole send --text \u0026lt;string\u0026gt; --qr      besides sending files and text the wormhole can also send a directory/folder. the same way with the command to send files. later the sent folder will be automatically compressed by the wormhole with the format zip\n  Send And Receive Files on Android you can also send files to and from android by using wormhole-william.   wormhole-william view on android\n  you can download this application at Play Store  or you can install directly on github . one of the interesting features in this application is we can scan the qr code generated from the wormhole, here.\n    initComments({ node: document.getElementById(\"comment-section\"), defaultHomeserverUrl: \"https://matrix.cactus.chat:8448\", serverName: \"cactus.chat\", siteName: \"novores.xyz\", commentSectionId: \"wormhole\" })  ","permalink":"https://novores.xyz/en/blog/wormhole/","summary":"Description wormhole-william is the go language implementation of magic-wormhole.\nWormhole itself is a command-line tool that contains commands to send and receive files, directories, and text, securely. this is to send and receive files using easy-to-read wormhole code as the “unlocking key” example of the unlocking key in question:5-boy-farming.\nThe wormhole also provides end-to-end encryption, the endpoint is connected to the same 2 endpoints.\n why use wormhole-william instead of wormhole?","title":"Share Files Between Devices with Wormhole William"},{"content":"Intro bluetooth is one of the technologies that must exist in every computer device, because of its many, many uses, not only for file transfers, but bluetooth can also be used to connect sound wirelessly.\naccording to wikipedia\n Bluetooth is the industry specification for wireless personal area networks (PAN). bluetooth connects and can be used to exchange information between devices. The specifications of this bluetooth device are developed and distributed by the bluetooth special interest group.\n because of its relatively large scale of use, bluetooth is used quite often.\nin this article I will give a tutorial on how to activate bluetooth simply, just use a terminal shell.\n Requirements bluez-utils bluez\n Step-by-step  install bluez and bluez-utils, both are basic packages to enable bluetooth on linux. After installing both, continue to enable the bluetooth service to run on the daemon. if you are using systemd type the following command: systemctl start bluetoothd whereas if you use openrc then the following command:  sudo rc-service bluetoothd start  now we will use the bluetoothctl command line  buka controller bluetooth bluetooth bluetoothctl  to activate the bluetooth controller type [bluetooth]# power on  scan the * device * to be connected [bluetooth]# scan on after being scanned, a number will appear which leads to the device in question connect bluetooth on the device in question, for example, my device is 22:22:0a:53:72:c9 [bluetooth]# connect 22:22:0A:53:72:C9 if you are not sure which device you want to connect, check the registered/scanned devices by typing devices, a device name with number will appear. pair beetween 2 device voila..! bluetooth is connected     Outro activate connect bluetooth by typing commands, very fun isn\u0026rsquo;t it? yeah i see. I\u0026rsquo;m sure you feel you\u0026rsquo;re hacking, or muttering in your heart I\u0026rsquo;m a hacker. but frankly, this method is very cool to do, in front of my friends, hehe..\n    initComments({ node: document.getElementById(\"comment-section\"), defaultHomeserverUrl: \"https://matrix.cactus.chat:8448\", serverName: \"cactus.chat\", siteName: \"novores.xyz\", commentSectionId: \"bluetoothctl\" })  ","permalink":"https://novores.xyz/en/blog/bluetoothctl/","summary":"Intro bluetooth is one of the technologies that must exist in every computer device, because of its many, many uses, not only for file transfers, but bluetooth can also be used to connect sound wirelessly.\naccording to wikipedia\n Bluetooth is the industry specification for wireless personal area networks (PAN). bluetooth connects and can be used to exchange information between devices. The specifications of this bluetooth device are developed and distributed by the bluetooth special interest group.","title":"How to Activate Bluetooth With Just A Terminal on Linux"},{"content":"Background sometimes when we want to update a package, there are things we want to ignore to update. for example, if there is a lack of quota I will make one large package to be ignored, one of which is libreoffice, this package one of the big packages and not too important to upgrade in my opinion, that I have\n Attention be careful when choosing packages to ignore for upgrading make sure there are no dependencies to depend on Mainly the Linux kernel\n  Solution quoted from page archwiki quoted from page archwiki there are 2 ways for archlinux users to ignore packages to be upgraded.\n first step the first way to ignore the package to be upgraded is to edit the file /etc/pacman.conf uncomment the line ignore pkg then enter the name of the package to be ignored or ignore. for example, I enter firefox and libreoffice:\n#IgnorePkg = firefox libreoffice-still we can also ignore the package group here by uncommenting the line\n#IgnoreGroup=gnome  the second way The second way to ignore the package to be upgraded is to add the string --ignore=firefox when upgrading the example package:\nsudo pacman -Syu --ignore=firefox whereas, for the package group, here\u0026rsquo;s an example:\nsudo pacman -Syu --ignoregroup=gnome  Reference  Archwiki      initComments({ node: document.getElementById(\"comment-section\"), defaultHomeserverUrl: \"https://matrix.cactus.chat:8448\", serverName: \"cactus.chat\", siteName: \"novores.xyz\", commentSectionId: \"ignore-pacman\" })  ","permalink":"https://novores.xyz/en/blog/mengabaikan-package-archlinux/","summary":"Background sometimes when we want to update a package, there are things we want to ignore to update. for example, if there is a lack of quota I will make one large package to be ignored, one of which is libreoffice, this package one of the big packages and not too important to upgrade in my opinion, that I have\n Attention be careful when choosing packages to ignore for upgrading make sure there are no dependencies to depend on Mainly the Linux kernel","title":"How to Ignore Certain Packages To Upgrade in Archlinux"},{"content":"description emptty itself is cli based, this is what makes it quite simple to operate, emptty is a simple display manager, emptty is written in the go language. but there are some configurations that we must determine first, so that emptty can work as we want.\nInstalling unfortunately emptty is only available in the aur and void repos. but calm down you can install emptty via cloning.\ntype the following command\n$ git clone https://github.com/tvrzna/emptty.git $ cd emptty $ sudo make Makefile Configuring   then type the following command to find out that emptty is installed correctly\n$ emptty -v   now we will edit the emptty config file in /etc/emptty/conf.\n$ sudo nano /etc/emptty/conf ini adalah contoh file config saya.\n# TTY, where emptty will start. TTY_NUMBER=2  # Enables switching to defined TTY number. SWITCH_TTY=true  # Enables printing of /etc/issue in daemon mode. PRINT_ISSUE=true # TTY, where emptty will start. TTY_NUMBER=2  # Enables switching to defined TTY number. SWITCH_TTY=true  # Enables printing of /etc/issue in daemon mode. PRINT_ISSUE=true  # Preselected user, if AUTOLOGIN is enabled, this user is logged in. DEFAULT_USER=noval  # Enables Autologin, if DEFAULT_USER is defined and part of nopasswdlogin group. Possible values are \u0026#34;true\u0026#34; or \u0026#34;false\u0026#34;. AUTOLOGIN=false  # The default session used, if Autologin is enabled. If session is not found in list of session, it proceeds to manual selection. AUTOLOGIN_SESSION=bspwm  # Default LANG, if user does not have set own in init script. #LANG=en_US.UTF-8  # Starts desktop with calling \u0026#34;dbus-launch\u0026#34;. DBUS_LAUNCH=true  # Starts Xorg desktop with calling \u0026#34;~/.xinitrc\u0026#34; script, if is true, file exists and selected WM/DE is Xorg session, it overrides DBUS_LAUNCH. XINITRC_LAUNCH=false  # Prints available WM/DE each on new line instead of printing on single line. VERTICAL_SELECTION=false   and lastly, to enable emptty on boot, type the following command in the shell.\nsystemctl enable emptty.service  the above command is only intended for systemd users\n  emptty has provided various init scripts in its source folder and all of them will be installed automatically when you install emptty via script makefile. you just need to type the following command to activate emptty.\nsudo rc-update add emptty    Reboot\n  Closing The best software documentation must come from the software developer.\n    initComments({ node: document.getElementById(\"comment-section\"), defaultHomeserverUrl: \"https://matrix.cactus.chat:8448\", serverName: \"cactus.chat\", siteName: \"novores.xyz\", commentSectionId: \"emptty\" })  ","permalink":"https://novores.xyz/en/blog/cara-mudah-mengkonfigurasi-emptty/","summary":"description emptty itself is cli based, this is what makes it quite simple to operate, emptty is a simple display manager, emptty is written in the go language. but there are some configurations that we must determine first, so that emptty can work as we want.\nInstalling unfortunately emptty is only available in the aur and void repos. but calm down you can install emptty via cloning.\ntype the following command","title":"Emptty: A Very Simple Display Manager"}]